#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
-------------------------------------------------

    @   Author  :       pengj
    @   date    :       2018/11/11 18:58
    @   IDE     :       PyCharm
    @   GitHub  :       https://github.com/JackyPJB
    @   Contact :       pengjianbiao@hotmail.com
-------------------------------------------------
    Description :  花园浇水100

    过关任务
    评论6

挑战任务

Alice有一个无穷大的花园，上面种满了五颜六色的花，非常漂亮。为了浇灌这些花，Alice在花园中修建了两个浇水喷头，每个喷头可以给以它中心的一定距离内的花浇水。现在请你告诉Alice，她修建的两个喷头可以给多大面积的花园浇水。
编程要求

补全右侧代码区中的solve(self,x1,y1,r1,x2,y2,r2)函数，完成挑战任务中提出的要求：求能够被浇灌的花园的面积。

如果需要，你可以在solve函数外添加其它代码，但是不要改变Solver类的名字以及solve函数的形式。

只要返回结果与标准答案之间的误差在1e-5以内即可。

函数参数说明如下：

x1：第一个喷头的横坐标（-100 <= x1 <= 100）；
y1：第一个喷头的纵坐标（-100 <= y1 <= 100）；
r1：第一个喷头的浇灌半径（-100 <= r1 <= 100）；
x2：第二个喷头的横坐标（-100 <= x2 <= 100）；
y2：第二个喷头的纵坐标（-100 <= y2 <= 100）；
r2：第二个喷头的浇灌半径（-100 <= r2 <= 100）；
样例1：

输入：

x1 = 0;
y1 = 0;
r1 = 1;
x2 = 1;
y2 = 1;
r2 = 1;

输出：

5.712389

如果你最终的结果误差在1e-5以内，程序会输出Accepted，否则你程序的运行结果与预期结果。
https://www.cnblogs.com/luyingfeng/p/4130689.html
思路 ： 分三种情况讨论

    假设半径小的圆为c1，半径大的圆为c2。
    c1的半径r1，圆心坐标（x1,y1)。c2的半径r2,圆心坐标（x2,y2)。
    d为两圆圆心连线的长度。
    相交面积为S
    d=sqrt((x1-x2)^2+(y1-y2)^2)
    （1）如果r1+r2<=d
    那么两圆相离，相交面积S=0
    （2）如果r2-r1>=d
    那么半径小的圆内含半径大的圆，那么相交面积为小圆的面积S=pi*r1*r1
    （3）既非（1）也非（2）
    在图上画两个相交圆，结合图像看。
    那么两圆相交，连接小圆的圆心与两个圆的交点，连接大圆的圆心和两个圆的交点。
    可以发现形成的图形被两个圆心的连线平分成2个全等三角形。
    由小圆圆心和交点所连两条线(长度为半径）以及在大圆之内的弧所形成的扇形为S1
    由大圆圆心和交点所连两条线(长度为半径）以及在小圆之内的弧所形成的扇形为S2
    由小圆圆心和交点所连两条线以及由大圆圆心和交点所连两条线所形成的四边形的面积为S3
    可见相交面积S=S1+S2-S3
    要求出扇形的面积，要知道扇形的圆心角。
    小圆包含的扇形的圆心角为2*a1(考虑一个三角形）
    a1=acos((r1^2+d^2-r2^2)/(2.0*r1*d)) 余弦定理
    a2=acos((r2^2+d^2-r1^2)/(2.0*r2*d))
    S1=pi*r1*r1*2*a1/(2*pi)=a1*r1*r1
    同理
    S2=a2*r2*r2
    S3为一个三角形面积的2倍
    S3=2*r1*d*sin(a1)/2=r1*d*sin(a1)
    则S=a1*r1*r1+a2*r2*r2-r1*d*sin(a1)
-------------------------------------------------
"""
import time
import math

__author__ = 'Max_Pengjb'
start = time.time()


# 下面写上代码块
def garden_water(x1, y1, r1, x2, y2, r2):
    if r1 > r2:
        x1, y1, r1, x2, y2, r2 = x2, y2, r2, x1, y1, r1
    d = math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)
    s = 0
    # 两圆相离或者相切，相交面积=0
    if r1 + r2 <= d:
        s = 0
    # 圆r1在圆r2 内部
    elif r2 - r1 >= d:
        s = r1 ** 2 * math.pi
    # 两圆相交
    else:
        a1 = math.acos((r1**2 + d**2 - r2**2)/(2.0*r1*d))
        a2 = math.acos((r2**2 + d**2 - r1**2)/(2.0*r2*d))
        s = a1*r1*r1 + a2*r2*r2 - r1*d*math.sin(a1)
    return r1**2 * math.pi + r2**2 * math.pi - s


print(garden_water(-27, -42, 8, 30, -28, 50))
# 上面中间写上代码块
end = time.time()
print('Running time: %s Seconds' % (end - start))
